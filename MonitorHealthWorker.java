/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package asdtemp;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author ajayj
 */
public class MonitorHealthWorker extends javax.swing.JFrame {

    /**
     * Creates new form FAQ
     */
    public MonitorHealthWorker() {
        initComponents();
        this.setLocationRelativeTo(null);
        fetch();
    }
    private void fetch() {
        try {
            
            Connection con = new Connector().getCon();
            PreparedStatement stmt=con.prepareStatement("SELECT dist_name FROM asdproject.districts;");
            ResultSet rs=stmt.executeQuery();
            int size =0;
            if (rs != null) 
            {
              rs.last();    // moves cursor to the last row
              size = rs.getRow(); // get row id 
            }
            rs.first();
            String [] distnames=new String[size];
            int i=0;
            do{
            distnames[i++]=rs.getString(1);
            }while(rs.next());
             cb_Rdistrict.setModel(new javax.swing.DefaultComboBoxModel<>(distnames));
             
            stmt=con.prepareStatement("SELECT type FROM asdproject.localbodytype;");
             rs=stmt.executeQuery();
             size =0;
            if (rs != null) 
            {
              rs.last();    // moves cursor to the last row
              size = rs.getRow(); // get row id 
            }
            rs.first();
            String lb_types[]=new String[size];
             i=0;
            do{
            lb_types[i++]=rs.getString(1);
            }while(rs.next());
             cb_Rlocalbodytype.setModel(new javax.swing.DefaultComboBoxModel<>(lb_types));
              }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Database Error. Contact System Admin.");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Class Missing. Contact System Admin.");
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null,"Unknown Error. Contact System Admin.");
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg_sex = new javax.swing.ButtonGroup();
        p_toppanel = new javax.swing.JPanel();
        l_title = new javax.swing.JLabel();
        img_back = new javax.swing.JLabel();
        p_main = new javax.swing.JPanel();
        b_proceed = new javax.swing.JButton();
        l_totalReg = new javax.swing.JLabel();
        tf_totalReg = new javax.swing.JTextField();
        l_cfltcWorkers = new javax.swing.JLabel();
        tf_cfltcWorkers = new javax.swing.JTextField();
        l_workeratTest = new javax.swing.JLabel();
        tf_workeratTest = new javax.swing.JTextField();
        l_male = new javax.swing.JLabel();
        l_female = new javax.swing.JLabel();
        tf_male = new javax.swing.JTextField();
        tf_female = new javax.swing.JTextField();
        cb_Rdistrict = new javax.swing.JComboBox<>();
        l_District = new javax.swing.JLabel();
        l_localbody = new javax.swing.JLabel();
        cb_Rlocalbodytype = new javax.swing.JComboBox<>();
        cb_Rlocalbody = new javax.swing.JComboBox<>();
        l_localbody1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 750));
        setResizable(false);
        getContentPane().setLayout(null);

        p_toppanel.setBackground(new java.awt.Color(46, 49, 49));
        p_toppanel.setLayout(null);

        l_title.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        l_title.setForeground(new java.awt.Color(255, 255, 255));
        l_title.setText("Monitor Health Worker");
        p_toppanel.add(l_title);
        l_title.setBounds(70, 10, 340, 41);

        img_back.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        img_back.setForeground(new java.awt.Color(255, 255, 255));
        img_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asdtemp/back2.png"))); // NOI18N
        img_back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        img_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img_backMouseClicked(evt);
            }
        });
        p_toppanel.add(img_back);
        img_back.setBounds(20, 10, 40, 40);

        getContentPane().add(p_toppanel);
        p_toppanel.setBounds(0, 0, 960, 60);

        p_main.setBackground(new java.awt.Color(232, 236, 241));
        p_main.setMinimumSize(new java.awt.Dimension(900, 740));

        b_proceed.setBackground(new java.awt.Color(23, 162, 184));
        b_proceed.setText("Proceed");
        b_proceed.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b_proceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_proceedActionPerformed(evt);
            }
        });

        l_totalReg.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_totalReg.setText("Total Registrations");

        tf_totalReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_totalRegActionPerformed(evt);
            }
        });

        l_cfltcWorkers.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_cfltcWorkers.setText("CFLTC Workers");

        tf_cfltcWorkers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_cfltcWorkersActionPerformed(evt);
            }
        });

        l_workeratTest.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_workeratTest.setText("Workers at Testing Centers");

        tf_workeratTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_workeratTestActionPerformed(evt);
            }
        });

        l_male.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_male.setText("Male");

        l_female.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_female.setText("Female");

        cb_Rdistrict.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_Rdistrict.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_RdistrictActionPerformed(evt);
            }
        });

        l_District.setBackground(new java.awt.Color(149, 165, 166));
        l_District.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        l_District.setText("District :");

        l_localbody.setBackground(new java.awt.Color(149, 165, 166));
        l_localbody.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        l_localbody.setText("Select Body type");

        cb_Rlocalbodytype.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_Rlocalbodytype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        cb_Rlocalbodytype.setToolTipText("");
        cb_Rlocalbodytype.setEnabled(false);
        cb_Rlocalbodytype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_RlocalbodytypeActionPerformed(evt);
            }
        });

        cb_Rlocalbody.setEditable(true);
        cb_Rlocalbody.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_Rlocalbody.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        cb_Rlocalbody.setToolTipText("");
        cb_Rlocalbody.setEnabled(false);
        cb_Rlocalbody.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_RlocalbodyActionPerformed(evt);
            }
        });

        l_localbody1.setBackground(new java.awt.Color(149, 165, 166));
        l_localbody1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        l_localbody1.setText("Select Body ");

        javax.swing.GroupLayout p_mainLayout = new javax.swing.GroupLayout(p_main);
        p_main.setLayout(p_mainLayout);
        p_mainLayout.setHorizontalGroup(
            p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_mainLayout.createSequentialGroup()
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_mainLayout.createSequentialGroup()
                            .addComponent(l_cfltcWorkers)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tf_cfltcWorkers, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(p_mainLayout.createSequentialGroup()
                            .addComponent(l_workeratTest)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                            .addComponent(tf_workeratTest, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(p_mainLayout.createSequentialGroup()
                            .addGap(186, 186, 186)
                            .addComponent(l_totalReg)
                            .addGap(198, 198, 198)
                            .addComponent(tf_totalReg, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(p_mainLayout.createSequentialGroup()
                            .addGap(396, 396, 396)
                            .addComponent(b_proceed, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(p_mainLayout.createSequentialGroup()
                            .addGap(294, 294, 294)
                            .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(p_mainLayout.createSequentialGroup()
                                    .addComponent(l_localbody1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_Rlocalbody, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(p_mainLayout.createSequentialGroup()
                                    .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(l_localbody, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(l_District, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cb_Rdistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cb_Rlocalbodytype, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(p_mainLayout.createSequentialGroup()
                            .addGap(280, 280, 280)
                            .addComponent(l_male)
                            .addGap(18, 18, 18)
                            .addComponent(tf_male, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(84, 84, 84)
                            .addComponent(l_female)
                            .addGap(26, 26, 26)
                            .addComponent(tf_female, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(275, Short.MAX_VALUE))
        );
        p_mainLayout.setVerticalGroup(
            p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_mainLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_District, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_Rdistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_localbody, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_Rlocalbodytype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_localbody1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_Rlocalbody, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(b_proceed, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_totalReg)
                    .addComponent(tf_totalReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(l_male)
                        .addComponent(tf_male, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(l_female)
                        .addComponent(tf_female, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_cfltcWorkers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_cfltcWorkers))
                .addGap(42, 42, 42)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_workeratTest)
                    .addComponent(tf_workeratTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(229, Short.MAX_VALUE))
        );

        getContentPane().add(p_main);
        p_main.setBounds(0, 60, 960, 740);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_proceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_proceedActionPerformed
        // TODO add your handling code here:
         String body = cb_Rlocalbody.getSelectedItem().toString();

        try{
           Connection con = new Connector().getCon();
            PreparedStatement stmt=con.prepareStatement("SELECT COUNT(cit.c_gender) FROM asdproject.citizen_list cit, asdproject.healthworker_list hw, asdproject.panchayaths panch WHERE cit.c_id=hw.citizen_id AND cit.c_local_body_name_id=panch.p_id AND panch.p_name=?;");
            stmt.setString(1, body);
            ResultSet rs=stmt.executeQuery();
            if(rs.next())
            {
            tf_totalReg.setText(rs.getString(1));
            stmt=con.prepareStatement("SELECT COUNT(cit.c_gender) FROM asdproject.citizen_list cit, asdproject.healthworker_list hw, asdproject.panchayaths panch WHERE cit.c_id=hw.citizen_id AND cit.c_local_body_name_id=panch.p_id AND panch.p_name=? AND cit.c_gender='Male';");
            stmt.setString(1, body);
            rs=stmt.executeQuery();
            if(rs.next())
            {
                tf_male.setText(rs.getString(1));
                tf_female.setText(Integer.toString(Integer.valueOf(tf_totalReg.getText())-Integer.valueOf(tf_male.getText())));
            }
            stmt=con.prepareStatement("SELECT COUNT(cit.c_id) FROM asdproject.citizen_list cit, asdproject.healthworker_list hw, asdproject.panchayaths panch WHERE cit.c_id=hw.citizen_id AND cit.c_local_body_name_id=panch.p_id AND panch.p_name=? AND hw.alloted_work_area_type='At CFLTCs';");
            stmt.setString(1, body);
            rs=stmt.executeQuery();
            if(rs.next())
            {
                tf_cfltcWorkers.setText(rs.getString(1));
                tf_workeratTest.setText(Integer.toString(Math.abs(Integer.valueOf(tf_totalReg.getText())-Integer.valueOf(tf_cfltcWorkers.getText()))));
            }
            }
            else
                JOptionPane.showMessageDialog(null,"No registrations");
        } catch(Exception e){
            //e.printStackTrace();
            JOptionPane.showMessageDialog(null,"Error. Contact System Admin.");
        }
    }//GEN-LAST:event_b_proceedActionPerformed

    private void tf_totalRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_totalRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_totalRegActionPerformed

    private void tf_cfltcWorkersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_cfltcWorkersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_cfltcWorkersActionPerformed

    private void tf_workeratTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_workeratTestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_workeratTestActionPerformed

    private void img_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img_backMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_img_backMouseClicked

    private void cb_RdistrictActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_RdistrictActionPerformed
        // TODO add your handling code here:
        cb_Rlocalbodytype.setEnabled(true);
    }//GEN-LAST:event_cb_RdistrictActionPerformed

    private void cb_RlocalbodytypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_RlocalbodytypeActionPerformed
        // TODO add your handling code here:
        try {
            Connection con = new Connector().getCon();
            String dist=cb_Rdistrict.getSelectedItem().toString();
            String lb_type=cb_Rlocalbodytype.getSelectedItem().toString();
            if(lb_type.equals("GRAMA PANCHAYATH"))
            {
                //int lb_type_id=3;
                PreparedStatement stmt=con.prepareStatement("SELECT dist_id FROM asdproject.districts where dist_name=? ;");
                stmt.setString(1,dist);
                ResultSet rs=stmt.executeQuery();
                rs.first();
                stmt=con.prepareStatement("SELECT p_name,p_id FROM asdproject.panchayaths where d_id=? ;");
                stmt.setString(1,rs.getString(1));
                rs=stmt.executeQuery();
                int size =0;
                if (rs != null)
                {
                    rs.last();    // moves cursor to the last row
                    size = rs.getRow(); // get row id
                }
                rs.first();
                String local_body_list[]=new String[size];
                int i=0;
                do{
                    local_body_list[i++]=rs.getString(1);
                }while(rs.next());
                cb_Rlocalbody.setModel(new javax.swing.DefaultComboBoxModel<>(local_body_list));
            }
            cb_Rlocalbody.setEnabled(true);
        }
        catch (SQLException ex) {
            //ex.printStackTrace();
            JOptionPane.showMessageDialog(null,"SQL Error. Contact System Admin.");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Class Missing. Contact System Admin.");
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null,"Unknown Error. Contact System Admin.");
        }

    }//GEN-LAST:event_cb_RlocalbodytypeActionPerformed

    private void cb_RlocalbodyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_RlocalbodyActionPerformed
        // TODO add your handling code here:
       

    }//GEN-LAST:event_cb_RlocalbodyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonitorHealthWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonitorHealthWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonitorHealthWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonitorHealthWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonitorHealthWorker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_proceed;
    private javax.swing.ButtonGroup bg_sex;
    private javax.swing.JComboBox<String> cb_Rdistrict;
    private javax.swing.JComboBox<String> cb_Rlocalbody;
    private javax.swing.JComboBox<String> cb_Rlocalbodytype;
    private javax.swing.JLabel img_back;
    private javax.swing.JLabel l_District;
    private javax.swing.JLabel l_cfltcWorkers;
    private javax.swing.JLabel l_female;
    private javax.swing.JLabel l_localbody;
    private javax.swing.JLabel l_localbody1;
    private javax.swing.JLabel l_male;
    private javax.swing.JLabel l_title;
    private javax.swing.JLabel l_totalReg;
    private javax.swing.JLabel l_workeratTest;
    private javax.swing.JPanel p_main;
    private javax.swing.JPanel p_toppanel;
    private javax.swing.JTextField tf_cfltcWorkers;
    private javax.swing.JTextField tf_female;
    private javax.swing.JTextField tf_male;
    private javax.swing.JTextField tf_totalReg;
    private javax.swing.JTextField tf_workeratTest;
    // End of variables declaration//GEN-END:variables
}
