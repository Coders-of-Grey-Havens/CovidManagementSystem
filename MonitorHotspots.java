/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package asdtemp;
import java.sql.*;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author harig
 */
public class MonitorHotspots extends javax.swing.JFrame {

    /**
     * Creates new form GovtOrders
     */
    public MonitorHotspots() {
        initComponents();
        this.setLocationRelativeTo(null);
        fetch();
    }
    private void fetch() {
        try {
            
            con = new Connector().getCon();
            stmt=con.prepareStatement("SELECT dist_name FROM asdproject.districts;");
            ResultSet rs=stmt.executeQuery();
            int size =0;
            if (rs != null) 
            {
              rs.last();    // moves cursor to the last row
              size = rs.getRow(); // get row id 
            }
            rs.first();
            distnames=new String[size];
            int i=0;
            do{
            distnames[i++]=rs.getString(1);
            }while(rs.next());
             cb_mhdistrict.setModel(new javax.swing.DefaultComboBoxModel<>(distnames));
             
            stmt=con.prepareStatement("SELECT type FROM asdproject.localbodytype;");
             rs=stmt.executeQuery();
             size =0;
            if (rs != null) 
            {
              rs.last();    // moves cursor to the last row
              size = rs.getRow(); // get row id 
            }
            rs.first();
            lb_types=new String[size];
             i=0;
            do{
            lb_types[i++]=rs.getString(1);
            }while(rs.next());
             cb_mhlocalbodytype.setModel(new javax.swing.DefaultComboBoxModel<>(lb_types));
              }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Database Error. Contact System Admin.");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Class Missing. Contact System Admin.");
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null,"Unknown Error. Contact System Admin.");
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cb_mhlocalbodytype = new javax.swing.JComboBox<>();
        cb_mhdistrict = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cb_type = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_monitorhotspot = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        b_viewhotspot = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cb_mhlocalbody = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(46, 49, 49));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Monitor Hotspots");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asdtemp/images.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(633, 633, 633))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel3.setText("Select District");

        cb_mhlocalbodytype.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        cb_mhlocalbodytype.setEnabled(false);
        cb_mhlocalbodytype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mhlocalbodytypeActionPerformed(evt);
            }
        });

        cb_mhdistrict.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        cb_mhdistrict.setEnabled(false);
        cb_mhdistrict.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mhdistrictActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel4.setText("Local Body Type");

        cb_type.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        cb_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "District Wise", "Local Body Wise" }));
        cb_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_typeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel5.setText("Select Local Body");

        t_monitorhotspot.setBackground(new java.awt.Color(204, 255, 255));
        t_monitorhotspot.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(t_monitorhotspot);

        b_viewhotspot.setBackground(new java.awt.Color(51, 51, 255));
        b_viewhotspot.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        b_viewhotspot.setForeground(new java.awt.Color(255, 255, 255));
        b_viewhotspot.setText("View All Hotspots");
        b_viewhotspot.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b_viewhotspot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_viewhotspotMouseClicked(evt);
            }
        });
        b_viewhotspot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_viewhotspotActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel7.setText("Search Result");

        jLabel8.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel8.setText("Type of Report");

        cb_mhlocalbody.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        cb_mhlocalbody.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_mhdistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_mhlocalbodytype, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(54, 54, 54)
                                .addComponent(cb_mhlocalbody, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(b_viewhotspot, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_type, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cb_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cb_mhdistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cb_mhlocalbodytype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cb_mhlocalbody, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(b_viewhotspot, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void cb_mhdistrictActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mhdistrictActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cb_mhdistrictActionPerformed

    private void cb_mhlocalbodytypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mhlocalbodytypeActionPerformed
        // TODO add your handling code here:
        cb_mhlocalbody.setEnabled(true);
        try {
            con = new Connector().getCon();
            dist=cb_mhdistrict.getSelectedItem().toString();
            lb_type=cb_mhlocalbodytype.getSelectedItem().toString();
            if(lb_type.equals("GRAMA PANCHAYATH"))
            {
            lb_type_id=3;
            stmt=con.prepareStatement("SELECT p_name FROM asdproject.panchayaths where d_id=? ;");
            stmt.setInt(1,cb_mhdistrict.getSelectedIndex()+1);
            ResultSet rs=stmt.executeQuery();
            int size =0;
            if (rs != null) 
            {
              rs.last();    // moves cursor to the last row
              size = rs.getRow(); // get row id 
            }
            rs.first();
            local_body_list=new String[size];
            int i=0;
            do{
            local_body_list[i++]=rs.getString(1);
            }while(rs.next());
             cb_mhlocalbody.setModel(new javax.swing.DefaultComboBoxModel<>(local_body_list));
            }
            
        }
        catch (SQLException ex) {
            //ex.printStackTrace();
            JOptionPane.showMessageDialog(null,"SQL ERROR. Contact System Admin.");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Class Missing. Contact System Admin.");
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null,"Unknown Error. Contact System Admin.");
        } 
    }//GEN-LAST:event_cb_mhlocalbodytypeActionPerformed

    private void b_viewhotspotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_viewhotspotMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_b_viewhotspotMouseClicked

    private void cb_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_typeActionPerformed
        // TODO add your handling code here:
        if(cb_type.getSelectedIndex()==0)
        {
           cb_mhdistrict.setEnabled(true);
           cb_mhlocalbodytype.setEnabled(false);
           cb_mhlocalbody.setEnabled(false);
        }
        else
        {
        cb_mhdistrict.setEnabled(true);
           cb_mhlocalbodytype.setEnabled(true);
           cb_mhlocalbody.setEnabled(false);
        }
    }//GEN-LAST:event_cb_typeActionPerformed

    private void b_viewhotspotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_viewhotspotActionPerformed
        // TODO add your handling code here:
         int distname = cb_mhdistrict.getSelectedIndex()+1;
        
        try
        {
            Connection con = new Connector().getCon();
            PreparedStatement stmt=null;
            if(cb_type.getSelectedIndex()==1)
            {
             int localbodytype= cb_mhlocalbodytype.getSelectedIndex();
             if(localbodytype==2)
             {
             String localbody = cb_mhlocalbody.getSelectedItem().toString();
             stmt=con.prepareStatement("SELECT h.hotspot_wardnumber,h.hotspot_added_date from asdproject.hotspots h, asdproject.panchayaths p where h.hotspot_localbody_id=p.p_id and p.p_name=?;");
             stmt.setString(1,localbody);
             }
            }
            else
            {
            stmt=con.prepareStatement("SELECT p.p_name,h.hotspot_wardnumber,h.hotspot_added_date from asdproject.hotspots h, asdproject.panchayaths p where h.hotspot_localbody_id=p.p_id and p.d_id=?;");
            stmt.setInt(1,distname);
            }             
            ResultSet rs=stmt.executeQuery();
            t_monitorhotspot.setModel(DbUtils.resultSetToTableModel(rs));
                
        }
        catch (SQLException ex) {
            //ex.printStackTrace();
            JOptionPane.showMessageDialog(null,"SQL ERROR. Contact System Admin.");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Class Missing. Contact System Admin.");
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null,"Unknown Error. Contact System Admin.");
        } 
    }//GEN-LAST:event_b_viewhotspotActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonitorHotspots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonitorHotspots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonitorHotspots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonitorHotspots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonitorHotspots().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_viewhotspot;
    private javax.swing.JComboBox<String> cb_mhdistrict;
    private javax.swing.JComboBox<String> cb_mhlocalbody;
    private javax.swing.JComboBox<String> cb_mhlocalbodytype;
    private javax.swing.JComboBox<String> cb_type;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable t_monitorhotspot;
    // End of variables declaration//GEN-END:variables
    Connection con;
    PreparedStatement stmt;
    String distnames[];
    String lb_types[];
    String local_body_list[];
    String dist;
    String lb_type;
    String lb_name;
    int dist_id;
    int lb_type_id;
    int lb_name_id;
}
