/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package asdtemp;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import java.sql.SQLException;
/**
 *
 * @author ajayj
 */
public class ContactCFLTC extends javax.swing.JFrame {

    /**
     * Creates new form FAQ
     */
    public ContactCFLTC() {
        initComponents();
        this.setLocationRelativeTo(null);
        fillCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        p_toppanel = new javax.swing.JPanel();
        l_title = new javax.swing.JLabel();
        img_back = new javax.swing.JLabel();
        p_main = new javax.swing.JPanel();
        l_nameCFLTC = new javax.swing.JLabel();
        l_addrCFLTC = new javax.swing.JLabel();
        l_contactNum = new javax.swing.JLabel();
        l_selectDistrict = new javax.swing.JLabel();
        l_bedNum = new javax.swing.JLabel();
        l_categ = new javax.swing.JLabel();
        l_nodalOffice = new javax.swing.JLabel();
        tf_nameCFLTC = new javax.swing.JTextField();
        tf_contactNum = new javax.swing.JTextField();
        cb_selectDistrict = new javax.swing.JComboBox<>();
        tf_bedNum = new javax.swing.JTextField();
        tf_nodalOffice = new javax.swing.JTextField();
        tf_currentlyOcc = new javax.swing.JTextField();
        l_recentlyOcc = new javax.swing.JLabel();
        l_selectCFLTC = new javax.swing.JLabel();
        cb_selectCFLTC = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        sp_addrCFLTC = new javax.swing.JScrollPane();
        ta_addrCFLTC = new javax.swing.JTextArea();
        tf_categ = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 800));
        setResizable(false);
        getContentPane().setLayout(null);

        p_toppanel.setBackground(new java.awt.Color(46, 49, 49));
        p_toppanel.setLayout(null);

        l_title.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        l_title.setForeground(new java.awt.Color(255, 255, 255));
        l_title.setText("Contact CFLTCs");
        p_toppanel.add(l_title);
        l_title.setBounds(70, 10, 230, 41);

        img_back.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        img_back.setForeground(new java.awt.Color(255, 255, 255));
        img_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asdtemp/back2.png"))); // NOI18N
        img_back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        img_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img_backMouseClicked(evt);
            }
        });
        p_toppanel.add(img_back);
        img_back.setBounds(20, 10, 40, 40);

        getContentPane().add(p_toppanel);
        p_toppanel.setBounds(0, 0, 900, 60);

        p_main.setBackground(new java.awt.Color(232, 236, 241));
        p_main.setMinimumSize(new java.awt.Dimension(900, 700));
        p_main.setPreferredSize(new java.awt.Dimension(900, 700));

        l_nameCFLTC.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_nameCFLTC.setText("CFLTC Name");

        l_addrCFLTC.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_addrCFLTC.setText("Address of CFLTC");

        l_contactNum.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_contactNum.setText("Contact Number");

        l_selectDistrict.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_selectDistrict.setText("Select District");

        l_bedNum.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_bedNum.setText("Number of Beds available");

        l_categ.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_categ.setText("Category");

        l_nodalOffice.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_nodalOffice.setText("Name of Nodal Office in charge");

        tf_nameCFLTC.setEditable(false);

        tf_contactNum.setEditable(false);
        tf_contactNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_contactNumActionPerformed(evt);
            }
        });

        cb_selectDistrict.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cb_selectDistrict.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_selectDistrictActionPerformed(evt);
            }
        });

        tf_bedNum.setEditable(false);
        tf_bedNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_bedNumActionPerformed(evt);
            }
        });

        tf_nodalOffice.setEditable(false);

        tf_currentlyOcc.setEditable(false);
        tf_currentlyOcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_currentlyOccActionPerformed(evt);
            }
        });

        l_recentlyOcc.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_recentlyOcc.setText("Currently Occupied");

        l_selectCFLTC.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_selectCFLTC.setText("Select CFLTC");

        cb_selectCFLTC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cb_selectCFLTC.setEnabled(false);
        cb_selectCFLTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_selectCFLTCActionPerformed(evt);
            }
        });

        ta_addrCFLTC.setEditable(false);
        ta_addrCFLTC.setColumns(20);
        ta_addrCFLTC.setLineWrap(true);
        ta_addrCFLTC.setRows(5);
        sp_addrCFLTC.setViewportView(ta_addrCFLTC);

        tf_categ.setEditable(false);
        tf_categ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_categActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout p_mainLayout = new javax.swing.GroupLayout(p_main);
        p_main.setLayout(p_mainLayout);
        p_mainLayout.setHorizontalGroup(
            p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_mainLayout.createSequentialGroup()
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p_mainLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(l_selectDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(190, 190, 190)
                        .addComponent(cb_selectDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p_mainLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(l_selectCFLTC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(180, 180, 180)
                        .addComponent(cb_selectCFLTC, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p_mainLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(l_nameCFLTC, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(190, 190, 190)
                        .addComponent(tf_nameCFLTC, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p_mainLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(l_contactNum, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(170, 170, 170)
                        .addComponent(tf_contactNum, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p_mainLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(l_bedNum, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(tf_bedNum, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p_mainLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(l_recentlyOcc, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150)
                        .addComponent(tf_currentlyOcc, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p_mainLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(l_nodalOffice, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(tf_nodalOffice, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p_mainLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(p_mainLayout.createSequentialGroup()
                                .addComponent(l_addrCFLTC, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(160, 160, 160)
                                .addComponent(sp_addrCFLTC, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(p_mainLayout.createSequentialGroup()
                                .addComponent(l_categ, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(170, 170, 170)
                                .addComponent(tf_categ, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(p_mainLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(68, 68, 68))
        );
        p_mainLayout.setVerticalGroup(
            p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_mainLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_selectDistrict)
                    .addComponent(cb_selectDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_selectCFLTC)
                    .addComponent(cb_selectCFLTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_nameCFLTC)
                    .addComponent(tf_nameCFLTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p_mainLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(l_addrCFLTC))
                    .addComponent(sp_addrCFLTC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_categ)
                    .addComponent(tf_categ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_contactNum)
                    .addComponent(tf_contactNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_bedNum)
                    .addComponent(tf_bedNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_recentlyOcc)
                    .addComponent(tf_currentlyOcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(p_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_nodalOffice)
                    .addComponent(tf_nodalOffice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        getContentPane().add(p_main);
        p_main.setBounds(0, 60, 900, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_selectDistrictActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_selectDistrictActionPerformed
        cb_selectCFLTC.setEnabled(true);
        int district = cb_selectDistrict.getSelectedIndex()+1;
        String[] cfltc_names;
        int size = 0,i=0;
        try{        
            Connection con = new Connector().getCon();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM asdproject.cfltc WHERE cfltc_district_id=?");
            ps.setInt(1, district);
            ResultSet rs = ps.executeQuery();
                
            if (rs != null) {
                rs.last();    // moves cursor to the last row
                size = rs.getRow(); // get row id 
            }
            rs.first();
            cfltc_names = new String[size];
                
            do{
                cfltc_names[i++] = rs.getString(2);
            }while(rs.next());
                
            cb_selectCFLTC.setModel(new javax.swing.DefaultComboBoxModel<>(cfltc_names));
        }catch(Exception e){
            //System.out.println("Error in select CFLTC");
        JOptionPane.showMessageDialog(null," Error. Contact System Admin");
        }
    }//GEN-LAST:event_cb_selectDistrictActionPerformed

    private void tf_bedNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_bedNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_bedNumActionPerformed

    private void cb_selectCFLTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_selectCFLTCActionPerformed
       int district = cb_selectDistrict.getSelectedIndex()+1;
        String cfltc_name = cb_selectCFLTC.getSelectedItem().toString();
        try{
                Connection con = new Connector().getCon();
                PreparedStatement ps = con.prepareStatement("SELECT * FROM asdproject.cfltc WHERE (`cfltc_district_id`=? AND `cfltc_name`=?)");
                ps.setInt(1, district);
                ps.setString(2, cfltc_name);
                ResultSet rs = ps.executeQuery();
                if(rs.next()){
                    tf_nameCFLTC.setText(rs.getString(2));
                    ta_addrCFLTC.setText(rs.getString(4));
                    tf_categ.setText(rs.getString(7));
                    tf_contactNum.setText(rs.getString(5));
                    tf_bedNum.setText(rs.getString(6));
                    tf_currentlyOcc.setText(rs.getString(9));
                    tf_nodalOffice.setText(rs.getString(8));
                }
   
        } catch(SQLException e) {
            //e.printStackTrace();
            JOptionPane.showMessageDialog(null,"Database Error. Contact System Admin");
        } catch(Exception e){
            //e.printStackTrace();   
            JOptionPane.showMessageDialog(null," Error. Contact System Admin");
         }
    }//GEN-LAST:event_cb_selectCFLTCActionPerformed

    private void tf_contactNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_contactNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_contactNumActionPerformed

    private void tf_currentlyOccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_currentlyOccActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_currentlyOccActionPerformed

    private void tf_categActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_categActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_categActionPerformed

    private void img_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img_backMouseClicked

        this.dispose();
    }//GEN-LAST:event_img_backMouseClicked

    private void fillCombo(){
        try{
                 
                 Connection con = new Connector().getCon();
                 PreparedStatement ps=con.prepareStatement("SELECT dist_name FROM asdproject.districts;");
                 ResultSet rs = ps.executeQuery();
                 int size = 0;
                 if (rs != null) 
                {
                    rs.last();    // moves cursor to the last row
                    size = rs.getRow(); // get row id 
                }
                rs.first();
                String[] distnames = new String[size];
                int i=0;
                do{
                    distnames[i++]=rs.getString(1);
                }while(rs.next());
                cb_selectDistrict.setModel(new javax.swing.DefaultComboBoxModel<>(distnames));
  
   
        }catch(Exception e){
            //System.out.println("Error in fillCombo");   
        JOptionPane.showMessageDialog(null," Error. Contact System Admin");}
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContactCFLTC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContactCFLTC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContactCFLTC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContactCFLTC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContactCFLTC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_selectCFLTC;
    private javax.swing.JComboBox<String> cb_selectDistrict;
    private javax.swing.JLabel img_back;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel l_addrCFLTC;
    private javax.swing.JLabel l_bedNum;
    private javax.swing.JLabel l_categ;
    private javax.swing.JLabel l_contactNum;
    private javax.swing.JLabel l_nameCFLTC;
    private javax.swing.JLabel l_nodalOffice;
    private javax.swing.JLabel l_recentlyOcc;
    private javax.swing.JLabel l_selectCFLTC;
    private javax.swing.JLabel l_selectDistrict;
    private javax.swing.JLabel l_title;
    private javax.swing.JPanel p_main;
    private javax.swing.JPanel p_toppanel;
    private javax.swing.JScrollPane sp_addrCFLTC;
    private javax.swing.JTextArea ta_addrCFLTC;
    private javax.swing.JTextField tf_bedNum;
    private javax.swing.JTextField tf_categ;
    private javax.swing.JTextField tf_contactNum;
    private javax.swing.JTextField tf_currentlyOcc;
    private javax.swing.JTextField tf_nameCFLTC;
    private javax.swing.JTextField tf_nodalOffice;
    // End of variables declaration//GEN-END:variables
}
