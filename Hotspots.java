/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package asdtemp;

import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author ajayj
 */
public class Hotspots extends javax.swing.JFrame {

    /**
     * Creates new form CFLTCs
     */
    public Hotspots() {
        initComponents();
        this.setLocationRelativeTo(null);
        fetch();
    }
private void fetch()
{
    DefaultCategoryDataset barChartData= new DefaultCategoryDataset();
        
         try
        {
             Connection con=new Connector().getCon();
             PreparedStatement stmt= con.prepareStatement("SELECT count(h.hotspot_id), d.dist_name from asdproject.hotspots h, asdproject.panchayaths p, asdproject.districts d where h.hotspot_localbody_id=p.p_id and p.d_id=d.dist_id group by d.dist_name;");
             ResultSet rs=stmt.executeQuery();
             while(rs.next())
                  barChartData.setValue(rs.getInt(1), "Hotspot Count", rs.getString(2));
        }
       catch(Exception e)  
       {
           JOptionPane.showMessageDialog(null,"Chart Display Error");
       }        
        JFreeChart barChart= ChartFactory.createBarChart("Hotspot District Wise Statistics", "District", "Count", barChartData, PlotOrientation.HORIZONTAL, false, true, false);      
        CategoryPlot barchrt= barChart.getCategoryPlot();
//        ((BarRenderer)barchrt.getRenderer()).setBarPainter(new StandardBarPainter());
//        BarRenderer r = (BarRenderer)barChart.getCategoryPlot().getRenderer();
//        r.setSeriesPaint(0, Color.black);
         NumberAxis yAxis = (NumberAxis) barchrt.getRangeAxis();
         yAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        barchrt.setRangeGridlinePaint(Color.ORANGE);
        
        ChartPanel barPanel= new ChartPanel(barChart);
        jPanel1.removeAll();
        jPanel1.add(barPanel, BorderLayout.CENTER);
        jPanel1.validate();
        
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        p_toppanel = new javax.swing.JPanel();
        p_title = new javax.swing.JLabel();
        img_back = new javax.swing.JLabel();
        p_sidepanel = new javax.swing.JPanel();
        p_addnew_hotspot = new javax.swing.JPanel();
        l_addnew_hotspot = new javax.swing.JLabel();
        p_monitor_hotspot = new javax.swing.JPanel();
        l_monitor_hotspot = new javax.swing.JLabel();
        p_remove_hotspot = new javax.swing.JPanel();
        l_remove_hotspot = new javax.swing.JLabel();
        p_refreshchart = new javax.swing.JPanel();
        l_remove_hotspot1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 600));
        setResizable(false);
        getContentPane().setLayout(null);

        p_toppanel.setBackground(new java.awt.Color(46, 49, 49));

        p_title.setBackground(new java.awt.Color(255, 255, 255));
        p_title.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        p_title.setForeground(new java.awt.Color(255, 255, 255));
        p_title.setText("Manage Hotspots");

        img_back.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        img_back.setForeground(new java.awt.Color(255, 255, 255));
        img_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asdtemp/back2.png"))); // NOI18N
        img_back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        img_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img_backMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p_toppanelLayout = new javax.swing.GroupLayout(p_toppanel);
        p_toppanel.setLayout(p_toppanelLayout);
        p_toppanelLayout.setHorizontalGroup(
            p_toppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_toppanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(img_back, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(p_title)
                .addContainerGap(613, Short.MAX_VALUE))
        );
        p_toppanelLayout.setVerticalGroup(
            p_toppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_toppanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(p_toppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(img_back, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p_title))
                .addGap(117, 117, 117))
        );

        getContentPane().add(p_toppanel);
        p_toppanel.setBounds(0, 0, 910, 60);

        p_sidepanel.setBackground(new java.awt.Color(46, 49, 49));
        p_sidepanel.setToolTipText("");
        p_sidepanel.setLayout(null);

        p_addnew_hotspot.setBackground(new java.awt.Color(46, 49, 49));
        p_addnew_hotspot.setForeground(new java.awt.Color(46, 49, 49));
        p_addnew_hotspot.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p_addnew_hotspot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_addnew_hotspotMouseClicked(evt);
            }
        });

        l_addnew_hotspot.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_addnew_hotspot.setForeground(new java.awt.Color(255, 255, 255));
        l_addnew_hotspot.setText("Add new ");

        javax.swing.GroupLayout p_addnew_hotspotLayout = new javax.swing.GroupLayout(p_addnew_hotspot);
        p_addnew_hotspot.setLayout(p_addnew_hotspotLayout);
        p_addnew_hotspotLayout.setHorizontalGroup(
            p_addnew_hotspotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_addnew_hotspotLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(l_addnew_hotspot)
                .addContainerGap(162, Short.MAX_VALUE))
        );
        p_addnew_hotspotLayout.setVerticalGroup(
            p_addnew_hotspotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_addnew_hotspotLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(l_addnew_hotspot)
                .addContainerGap())
        );

        p_sidepanel.add(p_addnew_hotspot);
        p_addnew_hotspot.setBounds(0, 0, 250, 50);

        p_monitor_hotspot.setBackground(new java.awt.Color(46, 49, 49));
        p_monitor_hotspot.setForeground(new java.awt.Color(46, 49, 49));
        p_monitor_hotspot.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p_monitor_hotspot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_monitor_hotspotMouseClicked(evt);
            }
        });

        l_monitor_hotspot.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_monitor_hotspot.setForeground(new java.awt.Color(255, 255, 255));
        l_monitor_hotspot.setText("Monitor ");

        javax.swing.GroupLayout p_monitor_hotspotLayout = new javax.swing.GroupLayout(p_monitor_hotspot);
        p_monitor_hotspot.setLayout(p_monitor_hotspotLayout);
        p_monitor_hotspotLayout.setHorizontalGroup(
            p_monitor_hotspotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_monitor_hotspotLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(l_monitor_hotspot)
                .addContainerGap(170, Short.MAX_VALUE))
        );
        p_monitor_hotspotLayout.setVerticalGroup(
            p_monitor_hotspotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_monitor_hotspotLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(l_monitor_hotspot)
                .addContainerGap())
        );

        p_sidepanel.add(p_monitor_hotspot);
        p_monitor_hotspot.setBounds(0, 50, 250, 49);

        p_remove_hotspot.setBackground(new java.awt.Color(46, 49, 49));
        p_remove_hotspot.setForeground(new java.awt.Color(46, 49, 49));
        p_remove_hotspot.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p_remove_hotspot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_remove_hotspotMouseClicked(evt);
            }
        });

        l_remove_hotspot.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_remove_hotspot.setForeground(new java.awt.Color(255, 255, 255));
        l_remove_hotspot.setText("Remove ");

        javax.swing.GroupLayout p_remove_hotspotLayout = new javax.swing.GroupLayout(p_remove_hotspot);
        p_remove_hotspot.setLayout(p_remove_hotspotLayout);
        p_remove_hotspotLayout.setHorizontalGroup(
            p_remove_hotspotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_remove_hotspotLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(l_remove_hotspot)
                .addContainerGap(165, Short.MAX_VALUE))
        );
        p_remove_hotspotLayout.setVerticalGroup(
            p_remove_hotspotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_remove_hotspotLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(l_remove_hotspot)
                .addContainerGap())
        );

        p_sidepanel.add(p_remove_hotspot);
        p_remove_hotspot.setBounds(0, 100, 250, 50);

        p_refreshchart.setBackground(new java.awt.Color(46, 49, 49));
        p_refreshchart.setForeground(new java.awt.Color(46, 49, 49));
        p_refreshchart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p_refreshchart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_refreshchartMouseClicked(evt);
            }
        });

        l_remove_hotspot1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        l_remove_hotspot1.setForeground(new java.awt.Color(255, 255, 255));
        l_remove_hotspot1.setText("Refresh Chart");

        javax.swing.GroupLayout p_refreshchartLayout = new javax.swing.GroupLayout(p_refreshchart);
        p_refreshchart.setLayout(p_refreshchartLayout);
        p_refreshchartLayout.setHorizontalGroup(
            p_refreshchartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_refreshchartLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(l_remove_hotspot1)
                .addContainerGap(132, Short.MAX_VALUE))
        );
        p_refreshchartLayout.setVerticalGroup(
            p_refreshchartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_refreshchartLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(l_remove_hotspot1)
                .addContainerGap())
        );

        p_sidepanel.add(p_refreshchart);
        p_refreshchart.setBounds(0, 150, 250, 50);

        getContentPane().add(p_sidepanel);
        p_sidepanel.setBounds(0, 60, 250, 1260);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanel1);
        jPanel1.setBounds(250, 60, 660, 530);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void img_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img_backMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_img_backMouseClicked

    private void p_addnew_hotspotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_addnew_hotspotMouseClicked
        // TODO add your handling code here:
         new addnewhotspot().setVisible(true);
    }//GEN-LAST:event_p_addnew_hotspotMouseClicked

    private void p_monitor_hotspotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_monitor_hotspotMouseClicked
        // TODO add your handling code here:
        new MonitorHotspots().setVisible(true);
    }//GEN-LAST:event_p_monitor_hotspotMouseClicked

    private void p_remove_hotspotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_remove_hotspotMouseClicked
        // TODO add your handling code here:
        new RemoveHotspots().setVisible(true);
    }//GEN-LAST:event_p_remove_hotspotMouseClicked

    private void p_refreshchartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_refreshchartMouseClicked
        // TODO add your handling code here:
        fetch();
        JOptionPane.showMessageDialog(null,"Chart Refreshed");
    }//GEN-LAST:event_p_refreshchartMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hotspots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hotspots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hotspots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hotspots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hotspots().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel img_back;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel l_addnew_hotspot;
    private javax.swing.JLabel l_monitor_hotspot;
    private javax.swing.JLabel l_remove_hotspot;
    private javax.swing.JLabel l_remove_hotspot1;
    private javax.swing.JPanel p_addnew_hotspot;
    private javax.swing.JPanel p_monitor_hotspot;
    private javax.swing.JPanel p_refreshchart;
    private javax.swing.JPanel p_remove_hotspot;
    private javax.swing.JPanel p_sidepanel;
    private javax.swing.JLabel p_title;
    private javax.swing.JPanel p_toppanel;
    // End of variables declaration//GEN-END:variables
}
