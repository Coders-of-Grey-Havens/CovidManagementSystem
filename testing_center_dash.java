/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package asdtemp;
import java.sql.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import javax.swing.table.*;

/**
 *
 * @author Sourav Menon
 */
public class testing_center_dash extends javax.swing.JFrame {

    /**
     * Creates new form testing_center_dash
     */
    public testing_center_dash(int key) {
        id= key;
        initComponents();
        this.setLocationRelativeTo(null);
        fetch();
    }

    private void fetch()
    {
        try
        {
           con = new Connector().getCon();
           stmt=con.prepareStatement("SELECT alloted_work_area_name_id FROM asdproject.healthworker_list where citizen_id=?;");
           stmt.setInt(1,id);
           ResultSet rs = stmt.executeQuery();
           rs.next();
           work_area_id=Integer.parseInt(rs.getString(1));
           stmt = con.prepareStatement("SELECT tc_name,tc_address FROM asdproject.testing_centers where tc_id=?");
           stmt.setInt(1,work_area_id);
           rs=stmt.executeQuery();
           rs.next();
           tf_tcname.setText(rs.getString(1));
           ta_tcaddress.setText(rs.getString(2));
           stmt=con.prepareStatement("SELECT * FROM asdproject.test_requests where t_center_id=? and t_status=?");
           stmt.setInt(1,work_area_id);
           stmt.setString(2,"Not tested");
           rs=stmt.executeQuery();
           t_htestrequest.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Database Error. Contact System Admin.");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Class Missing. Contact System Admin.");
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null,"Unknown Error. Contact System Admin.");
        } 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tf_tcname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_tcaddress = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_htestrequest = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tf_selectedtestid = new javax.swing.JTextField();
        tf_selectedcitizenname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cb_testresult = new javax.swing.JComboBox<>();
        b_updateresult = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cb_selectedcfltc = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(46, 49, 49));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Testing Center Dashboard");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asdtemp/back2.png"))); // NOI18N
        jLabel10.setToolTipText("");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Testing Center Alloted");

        tf_tcname.setEditable(false);
        tf_tcname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tf_tcname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_tcnameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Testing Center Address");

        ta_tcaddress.setEditable(false);
        ta_tcaddress.setColumns(20);
        ta_tcaddress.setLineWrap(true);
        ta_tcaddress.setRows(5);
        jScrollPane1.setViewportView(ta_tcaddress);

        t_htestrequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        t_htestrequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_htestrequestMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(t_htestrequest);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Test Request");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Update Test Result");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Selected Test ID");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Selected Citizen Name");

        tf_selectedtestid.setEditable(false);
        tf_selectedtestid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tf_selectedtestid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_selectedtestidActionPerformed(evt);
            }
        });

        tf_selectedcitizenname.setEditable(false);
        tf_selectedcitizenname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tf_selectedcitizenname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_selectedcitizennameActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Test Result ");

        cb_testresult.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_testresult.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Positive", "Negative", "Died" }));
        cb_testresult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_testresultActionPerformed(evt);
            }
        });

        b_updateresult.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b_updateresult.setText("Update Result");
        b_updateresult.setEnabled(false);
        b_updateresult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_updateresultMouseClicked(evt);
            }
        });
        b_updateresult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_updateresultActionPerformed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asdtemp/bullet.png"))); // NOI18N

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asdtemp/bullet.png"))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Select cfltc");

        cb_selectedcfltc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb_selectedcfltc.setEnabled(false);
        cb_selectedcfltc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_selectedcfltcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_tcname, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(99, 99, 99)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_selectedtestid)
                            .addComponent(tf_selectedcitizenname)
                            .addComponent(cb_testresult, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cb_selectedcfltc, javax.swing.GroupLayout.Alignment.TRAILING, 0, 169, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(b_updateresult))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_tcname))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                        .addGap(88, 88, 88))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(tf_selectedtestid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(tf_selectedcitizenname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_testresult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_selectedcfltc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(b_updateresult))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_tcnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_tcnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_tcnameActionPerformed

    private void tf_selectedtestidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_selectedtestidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_selectedtestidActionPerformed

    private void tf_selectedcitizennameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_selectedcitizennameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_selectedcitizennameActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel10MouseClicked

    private void cb_testresultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_testresultActionPerformed
        // TODO add your handling code here:
        if(cb_testresult.getSelectedItem().toString().equals("Positive"))
        {
            try {
            
            con = new Connector().getCon();
            stmt=con.prepareStatement("SELECT cfltc_name FROM asdproject.cfltc where cfltc_district_id=?;");
            stmt.setInt(1,c_dist_id);
            ResultSet rs=stmt.executeQuery();
            int size =0;
            if (rs != null) 
            {
              rs.last();    // moves cursor to the last row
              size = rs.getRow(); // get row id 
            }
            rs.first();
            cfltcnames=new String[size];
            int i=0;
            do{
            cfltcnames[i++]=rs.getString(1);
            }while(rs.next());
             cb_selectedcfltc.setModel(new javax.swing.DefaultComboBoxModel<>(cfltcnames));
            cb_selectedcfltc.setEnabled(true);
            selected_cfltc_name=cb_selectedcfltc.getSelectedItem().toString();
             
        }
            catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Database Error. Contact System Admin.");
        }  catch(Exception ex) {
            JOptionPane.showMessageDialog(null,"Unknown Error. Contact System Admin.");
        } 
            
        }
        else
        {
            cb_selectedcfltc.setEnabled(false);
            b_updateresult.setEnabled(true);
            
        }
    }//GEN-LAST:event_cb_testresultActionPerformed

    private void b_updateresultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_updateresultActionPerformed
        // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) t_htestrequest.getModel();
            int RowIndex = t_htestrequest.getSelectedRow();
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MMM-yyyy");  
            LocalDateTime now = LocalDateTime.now();  
            String today=dtf.format(now);
            String status=cb_testresult.getSelectedItem().toString();
            String tc_request_id=tf_selectedtestid.getText();
        try
        {
           con = new Connector().getCon();
           stmt=con.prepareStatement("INSERT INTO `asdproject`.`test_result` (`citizen_id`, `testcenter_id`, `result_date`, `result_status`) VALUES (?,?,?,?);");
           stmt.setInt(1, ci_id);
           stmt.setInt(2,work_area_id);
           stmt.setString(3,today);
           stmt.setString(4, status);
           int rs=stmt.executeUpdate();
          
           if(cb_testresult.getSelectedItem().toString().equals("Positive"))
           {
                stmt=con.prepareStatement("INSERT IGNORE INTO asdproject.total_affected_list(`citiz_id`) values(?);");
                stmt.setInt(1,ci_id);
                int r=stmt.executeUpdate();
                stmt=con.prepareStatement("SELECT cfltc_id FROM asdproject.cfltc where cfltc_district_id=? and cfltc_name=?;");
                stmt.setInt(1, c_dist_id);
                stmt.setString(2,selected_cfltc_name);
                ResultSet rs1=stmt.executeQuery();
                if(rs1.next())
                {
                    int selected_cfltc_id=Integer.parseInt(rs1.getString(1));
                    stmt=con.prepareStatement("INSERT INTO `asdproject`.`cfltc_register` (`citizen_id`, `cfltcr_id`, `entered_date`) VALUES (?,?,?);");
                    stmt.setInt(1, ci_id);
                    stmt.setInt(2, selected_cfltc_id);
                    stmt.setString(3,today);
                    int rs2=stmt.executeUpdate();
                }
                else
                      JOptionPane.showMessageDialog(null,"No CFLTC Registered in the district of patient!");  
                
           }
           else if(cb_testresult.getSelectedItem().toString().equals("Negative"))
           {
               stmt=con.prepareStatement("SELECT `c_covid_status` FROM asdproject.citizen_list WHERE c_id=?");
               stmt.setInt(1,ci_id);
               ResultSet rs2=stmt.executeQuery();
               rs2.first();
               if(rs2.getString(1).equals("Positive"))
               {
                stmt=con.prepareStatement("DELETE FROM `asdproject`.`cfltc_register` WHERE (`citizen_id` = ?);");
                stmt.setInt(1,ci_id);
                int res=stmt.executeUpdate();
                stmt=con.prepareStatement("INSERT IGNORE INTO asdproject.total_recoverd_list(`citi_id`) values(?);");
                stmt.setInt(1,ci_id);
                res=stmt.executeUpdate();
                
               }
           }
           else
           {
               stmt=con.prepareStatement("INSERT IGNORE INTO asdproject.total_affected_list(`citiz_id`) values(?);");
                stmt.setInt(1,ci_id);
                int r=stmt.executeUpdate();
           }
            
               
               
            stmt=con.prepareStatement("UPDATE `asdproject`.`citizen_list` SET `c_covid_status` =? WHERE (`c_id` = ?)");
           stmt.setInt(2, ci_id);
           stmt.setString(1, status);
           rs=stmt.executeUpdate();
           
           
           
           stmt=con.prepareStatement("UPDATE `asdproject`.`test_requests` SET `t_status` =? WHERE (`t_request_id` =?);");
           stmt.setString(1,"tested");
           stmt.setString(2,tc_request_id);
           rs=stmt.executeUpdate();
           if(rs != 0)
           {
               model.removeRow(RowIndex);
               JOptionPane.showMessageDialog(null,"Test Result Published Sucessfully");
               
           }
           else
               JOptionPane.showMessageDialog(null,"Updation Failiure");
           tf_selectedtestid.setText("");
           tf_selectedcitizenname.setText("");
           cb_selectedcfltc.setEnabled(false);
            b_updateresult.setEnabled(false);
        }
        catch(Exception e)
        {
            //e.printStackTrace();
            JOptionPane.showMessageDialog(null,"Error Ocuured");
        }
    }//GEN-LAST:event_b_updateresultActionPerformed

    private void t_htestrequestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_htestrequestMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) t_htestrequest.getModel();
        int RowIndex = t_htestrequest.getSelectedRow();
        tf_selectedtestid.setText(model.getValueAt(RowIndex,0).toString());
        ci_id =Integer.parseInt(model.getValueAt(RowIndex,1).toString());
        try
        {
          con = new Connector().getCon();
           stmt=con.prepareStatement("SELECT c_fullname,c_district_id FROM asdproject.citizen_list where c_id=?;");
           stmt.setInt(1,ci_id);
           ResultSet rs = stmt.executeQuery();
           rs.next();
           tf_selectedcitizenname.setText(rs.getString(1));
           c_dist_id = Integer.parseInt(rs.getString(2));
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Database Error. Contact System Admin.");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Class Missing. Contact System Admin.");
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null,"Unknown Error. Contact System Admin.");
        } 
    }//GEN-LAST:event_t_htestrequestMouseClicked

    private void cb_selectedcfltcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_selectedcfltcActionPerformed
        // TODO add your handling code here:
            b_updateresult.setEnabled(true);
    }//GEN-LAST:event_cb_selectedcfltcActionPerformed

    private void b_updateresultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_updateresultMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_b_updateresultMouseClicked

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(testing_center_dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(testing_center_dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(testing_center_dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(testing_center_dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_updateresult;
    private javax.swing.JComboBox<String> cb_selectedcfltc;
    private javax.swing.JComboBox<String> cb_testresult;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable t_htestrequest;
    private javax.swing.JTextArea ta_tcaddress;
    private javax.swing.JTextField tf_selectedcitizenname;
    private javax.swing.JTextField tf_selectedtestid;
    private javax.swing.JTextField tf_tcname;
    // End of variables declaration//GEN-END:variables
    Connection con;
    PreparedStatement stmt;
    int id;
    int work_area_id;
    int ci_id;
    int c_dist_id;
    String cfltcnames[];
    String selected_cfltc_name;
}
